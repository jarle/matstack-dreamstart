---
description: Remix route types usage and conventions
globs: 
alwaysApply: false
---
- `+types` are autogenerated by react-router and should always be relative to the current file and end with a `.js` extension: `./+types/<filename>.js`. 
- If the types appear to be missing, run `npx react-router typegen` to regenerate them
- If typegen fails with errors about route params, check your route file naming conventions [remix-flat-routes.mdc](mdc:.cursor/rules/remix-flat-routes.mdc)
- Actions and Loader type signatures are typed using `import { Route } from './+types/<file_name>.js'` and used like this:
```ts
export async function loader({ context }: Route.LoaderArgs) {
  const { http, make } = context
  const service = await make('my-service')
}
```
- The React Router autogenerated type signatures are located in `.react-router` at the project root. The AdonisJS environment is augmented on these types in [env.d.ts](mdc:env.d.ts)